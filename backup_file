const path = require('path');
const CopyPlugin = require('copy-webpack-plugin');
const { CleanWebpackPlugin } = require('clean-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
    entry: {
        main: './script_folder/index.ts',
        view_cart: './script_folder/view_cart.ts',
    },
    output: {
        filename: '[name].bundle.js',
        path: path.resolve(__dirname, 'dist'),
        publicPath: '/',
    },
    resolve: {
        alias: {
            '@components': path.resolve(__dirname, 'script_folder/components'),
            '@styles': path.resolve(__dirname, 'styles'),
        },
        extensions: ['.ts', '.js'],
        fallback: {
            path: require.resolve('path-browserify'),
        },
    },
    module: {
        rules: [
            {
                test: /\.ts$/,
                use: 'ts-loader',
                exclude: /node_modules/,
            },
            {
                test: /\.(png|jpg|jpeg|gif|svg)$/,
                type: 'asset/resource',
            },
            {
                test: /\.css$/,
                use: ['style-loader', 'css-loader'],
            },
        ],
    },
    plugins: [
        new CleanWebpackPlugin(),
        new CopyPlugin({
            patterns: [
                { from: 'styles', to: 'styles', noErrorOnMissing: true },
                { from: 'htmls_folder', to: 'htmls_folder', noErrorOnMissing: true },
            ],
        }),
        new HtmlWebpackPlugin({
            template: 'htmls_folder/index.html',
            filename: 'index.html',
            chunks: ['main'], // Include only `main` bundle
        }),
        new HtmlWebpackPlugin({
            template: 'htmls_folder/view_cart.html',
            filename: 'view_cart.html',
            chunks: ['view_cart'], // Include only `view_cart` bundle
        }),
    ],
    devtool: 'source-map',
    mode: 'development',
    devServer: {
        static: [
            { directory: path.resolve(__dirname, 'htmls_folder') },
            { directory: path.resolve(__dirname, 'images') },
            { directory: path.resolve(__dirname, 'dist') },
        ],
        port: 8080,
        open: true,
        historyApiFallback: true,
        proxy: [
            {
                context: ['/api'],
                target: 'http://localhost:3000',
                changeOrigin: true,
            },
        ],
        devMiddleware: {
            writeToDisk: true, // Write files to disk
        },
    },
};
